<?php
/**
 * 游戏房间
 * User: 4213509@qq.com
 * Date: 18-05-17
 * Time: 上午10:10
 */

namespace app\Actors;

use app\GameException;
use Server\Components\Event\EventDispatcher;
use Server\CoreBase\Actor;
use Server\CoreBase\ChildProxy;

class PlayerActor extends Actor
{
    
    
    public function initialization($name, $saveContext = null)
    {
        yield parent::initialization($name, $saveContext); // TODO: Change the autogenerated stub
        
        // 已经初始化过用户信息的要订阅离线事件消息  每次重启都会执行这里，确保不丢失
        if (isset($this->saveContext['info']['userId'])) {
            yield $this->offlineHandle($this->saveContext['info']['userId']);
        }
    }
    
    // 事件处理函数
    public function offlineHandle($userId)
    {
        // 监听事件消息
        EventDispatcher::getInstance()->add('offline' . $userId, yield function ($event) use ($userId) {
            $user_Info = $this->saveContext['info'];
            $room_id   = $this->saveContext['info']['room_id'];
            //取消订阅房间消息
            get_instance()->removeSub("Room/".$room_id , $userId);
            //删除当前监听的事件
   			 EventDispatcher::getInstance()->removeAll('offline' . $userId);
             //通知房间该用户掉线 或者是退出  例如 $code =1 退出 $code =2 头像暗了
            Actor::getRpc($user_Info['room_actor'])->offlineMessage($user_Info['userId'], 1);
        });
    }
    
    /**
     * 初始化储存用户信息
     * @param $user_info
     */
    public function initData($user_info)
    {
        
        $this->saveContext['info'] = $user_info;
        
    }
    
    public function registStatusHandle($key, $value)
    {
        echo __CLASS__.__FUNCTION__.PHP_EOL;
    }
}